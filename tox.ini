[tox]
envlist = py27-tests
skipsdist = true
minversion = 3.8.0
requires = tox-pip-extensions
tox_pip_extensions_ext_venv_update = true

[pytest]
filterwarnings =
    # Fail the tests if there are any warnings.
    error

    # Ignore certain specific warnings. One line per warning to ignore. The
    # pattern is:
    #
    # ignore:<WARNING_MESSAGE>:<WARNING_CATEGORY>:<MODULE>
    #
    # <WARNING_MESSAGE> is a regex that must match the warning message that you
    # want to ignore.
    #
    # <WARNING_CATEGORY> is the class of the warning that you want to ignore,
    # e.g. DeprecationWarning. See:
    # https://docs.python.org/2/library/warnings.html#warning-categories
    #
    # <MODULE> is the name of the module that the warning originates from.
    #
    # See https://docs.python.org/3/library/warnings.html and
    # https://docs.pytest.org/en/latest/warnings.html
    #
    ignore:^Use of \.\. or absolute path in a resource path is not allowed and will raise exceptions in a future release\.$:DeprecationWarning:pkg_resources

[testenv]
skip_install = true
sitepackages = {env:SITE_PACKAGES:false}
passenv =
    dev: AUTHORITY
    dev: BOUNCER_URL
    dev: CLIENT_OAUTH_ID
    dev: CLIENT_RPC_ALLOWED_ORIGINS
    dev: CLIENT_URL
    dev: GOOGLE_ANALYTICS_TRACKING_ID
    dev: GOOGLE_ANALYTICS_CLIENT_TRACKING_ID
    dev: SENTRY_DSN
    dev: SENTRY_ENVIRONMENT
    dev: USE_HTTPS
    dev: WEBSOCKET_URL
    dev: NEW_RELIC_LICENSE_KEY
    dev: NEW_RELIC_APP_NAME
    {tests,functests}: TEST_DATABASE_URL
    {tests,functests}: ELASTICSEARCH_URL
    {tests,functests}: PYTEST_ADDOPTS
    functests: BROKER_URL
    codecov: CI TRAVIS*
deps =
    tests: coverage
    {tests,functests,docstrings,checkdocstrings,analyze}: pytest
    {tests,functests,docstrings,checkdocstrings,analyze}: factory-boy
    {tests,docstrings,checkdocstrings,analyze}: mock
    {tests,docstrings,checkdocstrings,analyze}: hypothesis
    lint: flake8
    lint: flake8-future-import
    {format,checkformatting}: black
    coverage: coverage
    codecov: codecov
    {functests,docstrings,checkdocstrings,analyze}: webtest
    {docs,docstrings}: sphinx-autobuild
    {docs,checkdocs,docstrings,checkdocstrings}: sphinx
    {docs,checkdocs,docstrings,checkdocstrings}: sphinx_rtd_theme
    {tests,functests,docstrings,checkdocstrings,analyze}: -r requirements.txt
    analyze: pylint
    dev: ipython
    dev: ipdb
    dev: -r requirements-dev.in
whitelist_externals =
    dev: sh
changedir =
    {docs,checkdocs}: docs
commands =
    dev: sh bin/hypothesis --dev init
    dev: {posargs:sh bin/hypothesis devserver}
    lint: flake8 h
    lint: flake8 tests
    lint: flake8 --select FI14 --exclude 'h/cli/*,tests/h/cli/*,h/util/uri.py,h/migrations/versions/*' h tests
    analyze: pylint {posargs:h tests}
    format: black h tests
    checkformatting: black --check h tests
    tests: coverage run -m pytest {posargs:tests/h/}
    functests: pytest {posargs:tests/functional/}
    docs: sphinx-autobuild -BqT -b dirhtml -d {envdir}/doctrees . {envdir}/html
    checkdocs: sphinx-build -qTWn -b dirhtml -d {envdir}/doctrees . {envdir}/html
    {docstrings,checkdocstrings}: sphinx-apidoc -ePMF -a -H "Dooccsstrinngs!!" --ext-intersphinx --ext-todo --ext-viewcode -o {envdir}/rst .
    docstrings: sphinx-autobuild -BqT -z h -z tests -b dirhtml {envdir}/rst {envdir}/dirhtml
    checkdocstrings: sphinx-build -qTn -b dirhtml {envdir}/rst {envdir}/dirhtml
    coverage: -coverage combine
    coverage: coverage report
    codecov: codecov
